from os import stat
import requests
import utils.tool as tool
import pytz, time, json
from datetime import datetime

def read_cve_info(fname):
    cve_obs = []
    with open(fname, 'rb') as rfile:
        res = json.load(rfile)
        # print(res)
        
        # print(len(res['CVE_Items']))
        for resob in res['CVE_Items']:
            ob = resob
            cve_ob = {}
            cve_ob['id'] = ob['cve']['CVE_data_meta']['ID']
            # print(cve_ob['id'])
            
            if '** REJECT **' in ob['cve']['description']['description_data'][0]['value']:
                continue
            if '** DISPUTE **' in ob['cve']['description']['description_data'][0]['value']:
                continue

            cve_ob['published_date'] = ob['publishedDate']
            cve_ob['last_modified_date'] = ob['lastModifiedDate']
            cwes = []
            for ii in ob['cve']['problemtype']['problemtype_data']:
                for subi in ii['description']:
                    cwes.append(subi['value'])
            cve_ob['cwes'] = '#'.join(cwes)

            # baseMetricV3
            if 'baseMetricV3' in ob['impact']:
                cvvs = ob['impact']['baseMetricV3']
                cve_ob['cvssV3_exploitabilityScore'] = cvvs['exploitabilityScore']
                cve_ob['cvssV3_impactScore'] = cvvs['impactScore']
                cve_ob['cvssV3_attackVector'] = cvvs['cvssV3']['attackVector']
                cve_ob['cvssV3_attackComplexity'] = cvvs['cvssV3']['attackComplexity']
                cve_ob['cvssV3_privilegesRequired'] = cvvs['cvssV3']['privilegesRequired']
                cve_ob['cvssV3_userInteraction'] = cvvs['cvssV3']['userInteraction']
                cve_ob['cvssV3_scope'] = cvvs['cvssV3']['scope']
                cve_ob['cvssV3_confidentialityImpact'] = cvvs['cvssV3']['confidentialityImpact']
                cve_ob['cvssV3_integrityImpact'] = cvvs['cvssV3']['integrityImpact']
                cve_ob['cvssV3_availabilityImpact'] = cvvs['cvssV3']['availabilityImpact']
                cve_ob['cvssV3_baseScore'] = cvvs['cvssV3']['baseScore']
                cve_ob['cvssV3_baseSeverity'] = cvvs['cvssV3']['baseSeverity']

            # baseMetricV2
            if 'baseMetricV2' in ob['impact']:
                cvvs = ob['impact']['baseMetricV2']
                cve_ob['cvssV2_severity'] = cvvs['severity']
                cve_ob['cvssV2_exploitabilityScore'] = cvvs['exploitabilityScore']
                cve_ob['cvssV2_impactScore'] = cvvs['impactScore']
                if 'acInsufInfo' in cvvs:
                    cve_ob['cvssV2_acInsufInfo'] = cvvs['acInsufInfo']
                cve_ob['cvssV2_obtainAllPrivilege'] = cvvs['obtainAllPrivilege']
                cve_ob['cvssV2_obtainUserPrivilege'] = cvvs['obtainUserPrivilege']
                cve_ob['cvssV2_obtainOtherPrivilege'] = cvvs['obtainOtherPrivilege']
                if 'userInteractionRequired' in cvvs:
                    cve_ob['cvssV2_userInteractionRequired'] = cvvs['userInteractionRequired']
                
                cve_ob['cvssV2_accessVector'] = cvvs['cvssV2']['accessVector']
                cve_ob['cvssV2_accessComplexity'] = cvvs['cvssV2']['accessComplexity']
                cve_ob['cvssV2_authentication'] = cvvs['cvssV2']['authentication']
                cve_ob['cvssV2_confidentialityImpact'] = cvvs['cvssV2']['confidentialityImpact']
                cve_ob['cvssV2_integrityImpact'] = cvvs['cvssV2']['integrityImpact']
                cve_ob['cvssV2_availabilityImpact'] = cvvs['cvssV2']['availabilityImpact']
                cve_ob['cvssV2_baseScore'] = cvvs['cvssV2']['baseScore']
            cve_obs.append(cve_ob)
    rfile.close()
    return cve_obs